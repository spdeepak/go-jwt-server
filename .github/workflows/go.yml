name: Go JWT Server CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  workflow_dispatch:
    inputs:
      push_image:
        description: "Push Docker image to Docker Hub?"
        required: false
        default: "false"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Run Makefile pre-step
        run: make

      - name: Build
        run: go build ./...

      - name: Test
        run: go test ./... -coverprofile=coverage.out

#  docker_amd64:
#    runs-on: ubuntu-latest
#    needs: build-and-test
#    if: github.ref == 'refs/heads/main'
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Log in to Docker Hub
#        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
#      - name: Build amd64 Docker image
#        run: docker buildx build --platform linux/amd64 -t spdeepak/go-jwt-server:latest --load .
#      - name: Push Docker image
#        run: docker push spdeepak/go-jwt-server:latest

#  docker_arm64:
#    runs-on: ubuntu-latest
#    needs: build-and-test
#    if: github.ref == 'refs/heads/main'
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Log in to Docker Hub
#        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
#      - name: Build arm64 Docker image
#        run: docker buildx build --platform linux/arm64 -t spdeepak/go-jwt-server:latest --load .
#      - name: Push Docker image
#        run: docker push spdeepak/go-jwt-server:latest

  docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    #    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push multi-arch Docker image
        run: docker buildx build --platform linux/amd64,linux/arm64 -t spdeepak/go-jwt-server:latest --push .
