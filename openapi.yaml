openapi: 3.0.0
info:
  version: 1.0.0
  title: Go JWT Server
paths:
  /api/v1/auth/signup:
    post:
      description: User signup
      summary: Endpoint for user signup
      operationId: signup
      tags:
        - auth
      parameters:
        - $ref: '#/components/parameters/UserAgent'
      requestBody:
        description: User signup request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignup'
      responses:
        '200':
          description: OK
  /api/v1/auth/login:
    post:
      description: User login
      summary: Endpoint for user login
      operationId: login
      tags:
        - auth
      parameters:
        - $ref: '#/components/parameters/LoginSource'
        - $ref: '#/components/parameters/UserAgent'
      requestBody:
        description: User login request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /api/v1/auth/refresh:
    post:
      description: Token refresh
      summary: Endpoint to get new token using refresh token
      operationId: refresh
      tags:
        - auth
      parameters:
        - $ref: '#/components/parameters/LoginSource'
        - $ref: '#/components/parameters/UserAgent'
      requestBody:
        description: Refresh token request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refresh'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /ready:
    get:
      description: Ready check
      summary: Ready check
      tags:
        - Probe
      responses:
        '200':
          description: OK
  /live:
    get:
      description: Live check
      summary: Live check
      tags:
        - Probe
      responses:
        '200':
          description: OK
components:
  parameters:
    LoginSource:
      name: x-login-source
      description: Login source
      example: web
      in: header
      required: true
      schema:
        type: string
        enum:
          - web
          - mobile
          - api
    UserAgent:
      name: User-Agent
      description: User Agent
      in: header
      required: true
      schema:
        type: string
  schemas:
    UserSignup:
      type: object
      required:
        - email
        - firstName
        - lastName
        - password
      properties:
        email:
          type: string
          pattern:
          example: first.last@example.com
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          pattern:
          example: first.last@example.com
        password:
          type: string
    LoginResponse:
      type: object
      required:
        - accessToken
        - refreshToken
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    Refresh:
      type: object
      required:
        - refreshToken
      properties:
        refreshToken:
          type: string