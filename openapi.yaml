openapi: 3.0.0
info:
  version: 1.0.0
  title: Go JWT Server
paths:
  /api/v1/signup:
    post:
      description: User signup
      summary: Endpoint for user signup
      operationId: signup
      tags:
        - user
      requestBody:
        description: User signup request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignup'
      responses:
        '200':
          description: OK
  /api/v1/signin:
    post:
      description: User login
      summary: Endpoint for user login
      operationId: login
      tags:
        - user
      requestBody:
        description: User login request body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
  /ready:
    get:
      description: Ready check
      summary: Ready check
      tags:
        - Probe
      responses:
        '200':
          description: OK
  /live:
    get:
      description: Live check
      summary: Live check
      tags:
        - Probe
      responses:
        '200':
          description: OK
components:
  parameters:
    CorrelationId:
      name: x-correlationid
      description: Correlation ID
      in: header
      schema:
        type: string
    AgentName:
      name: x-agentname
      description: Name of the agent
      example: tms-api
      in: header
      schema:
        type: string
    UserEmail:
      name: x-useremail
      description: Email for the user
      example: user.name@trendyol.com
      in: header
      required: true
      schema:
        type: string
  schemas:
    UserSignup:
      type: object
      required:
        - email
        - firstName
        - lastName
        - password
      properties:
        email:
          type: string
          pattern:
          example: first.last@example.com
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          pattern:
          example: first.last@example.com
        password:
          type: string
    LoginResponse:
      type: object
      required:
        - accessToken
        - refreshToken
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string